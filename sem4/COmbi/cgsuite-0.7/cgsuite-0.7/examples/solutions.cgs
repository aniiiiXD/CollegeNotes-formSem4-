/*************************************************************************
  solutions.cgs
  Combinatorial Game Suite Example Script
  
  Solutions to exercises in the "Functions and Lists" and
  "Writing Scripts" sections of the tutorial.
*************************************************************************/

//////////////////////////////////////////////////////////////////////////
// Seating Boys and Girls
// (Note that RnR == -LnL for all n, by symmetry)

clear(LL, LR);

LL(n_) := { seq(LL(i) + LL(n-i-1), i=0..n-1)
          | seq(LR(i) + LR(n-i-1), i=1..n-2) };

LR(n_) := { seq(LL(i) + LR(n-i-1), i=0..n-2)
          | seq(LR(i) - LL(n-i-1), i=1..n-1) };

"Seating Boys and Girls for 1 <= n <= 10:" >> out;
tabulate(n, LL(n), LR(n), -LL(n), n=1..10) >> out;
"" >> out;
"Seating Boys and Girls L15R:" >> out;
LR(15) >> out;

//////////////////////////////////////////////////////////////////////////
// Partizan subtraction games with possibly infinite subtraction sets

clear(fsubtgame);

fsubtgame(f_,g_,n_) :=
  { seq(fsubtgame(f,g,n-f(k)), k=1..n, f(k) <= n)
  | seq(fsubtgame(f,g,n-g(k)), k=1..n, g(k) <= n) };

"" >> out;
"Odd-even subtraction heaps for 1 <= n <= 10:" >> out;
tabulate(n, fsubtgame(i->2.i-1, i->2.i, n), n=1..10) >> out;

//////////////////////////////////////////////////////////////////////////
// Partizan end nim

lreduce := proc(L,n) local newL;
  newL := Clone(L);
  if n < newL[1] then
    newL[1] := newL[1] - n
  else
    Remove(newL, 1)
  fi;
  newL
end;

rreduce := proc(L,n) local newL;
  newL := Clone(L);
  if n < newL[Length(newL)] then
    newL[Length(newL)] := newL[Length(newL)] - n
  else
    Remove(newL, Length(newL))
  fi;
  newL
end;

clear(pendnim);
pendnim([]) := 0;
pendnim(L_) :=
  { seq(pendnim(lreduce(L,n)), n=1..L[1])
  | seq(pendnim(rreduce(L,n)), n=1..L[Length(L)]) };

"" >> out;
"[m,n] partizan end nim for 1 <= m,n <= 6:" >> out;
t := CreateTable(6);
for m from 1 to 6 do
  AddTableRow(t, seq(pendnim([m,n]), n=1..6));
od;
t >> out;

